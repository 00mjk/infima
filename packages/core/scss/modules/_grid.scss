.container {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-width);
  padding-left: var(--horizontal-spacing);
  padding-right: var(--horizontal-spacing);
  width: 100%;

  &.container-fluid {
    max-width: inherit;
  }
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left: calc(var(--horizontal-spacing) * -0.5);
  margin-right: calc(var(--horizontal-spacing) * -0.5);

  &.no-gutters {
    margin-left: 0;
    margin-right: 0;

    > .col {
      padding-left: 0;
      padding-right: 0;
    }
  }

  &.row-align-top {
    align-items: flex-start;
  }

  &.row-align-bottom {
    align-items: flex-end;
  }

  &.row-align-center {
    align-items: center;
  }

  &.row-align-stretch {
    align-items: stretch;
  }

  &.row-align-baseline {
    align-items: baseline;
  }

  .col {
    $columns: 12;

    --col-width: 100%;

    display: block;
    flex: 1 0;
    margin-left: 0;
    max-width: 100%;
    padding-left: calc(var(--horizontal-spacing) / 2);
    padding-right: calc(var(--horizontal-spacing) / 2);
    width: 100%;

    &[class*='col-'] {
      flex: 0 0 var(--col-width);
      max-width: var(--col-width);
    }

    @media (max-width: #{map-get($grid-breakpoints, lg)}) {
      // Increase specificity.
      &.col.col {
        --col-width: 100%;

        flex-basis: var(--col-width);
        margin-left: 0;
      }
    }

    @for $column from 1 through $columns {
      $percentage: $column/$columns * 100;

      &.col-#{$column} {
        --col-width: #{$percentage}%;
      }

      &.col-offset-#{$column} {
        margin-left: $percentage#{'%'};
      }
    }
  }
}
